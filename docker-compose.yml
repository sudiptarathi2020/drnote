services:
  db:
    image: postgres:16-bookworm
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DATABASE_USERNAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  backend:
    image: ${BACKEND_IMAGE}
    container_name: backend
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      SECRET_KEY: ${SECRET_KEY}
      DEBUG: ${DEBUG}
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_URL: postgresql://${DATABASE_USERNAME}:${DATABASE_PASSWORD}@db:5432/${DATABASE_NAME}
    env_file:
      - .env
    command: >
      sh -c "python manage.py makemigrations &&
      python manage.py migrate &&
      gunicorn --bind 0.0.0.0:8000 --workers 3 backend.wsgi:application "

  frontend:
    image: ${FRONTEND_IMAGE}
    container_name: frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    environment:
      VITE_API_URL: ${VITE_API_URL}
    env_file:
      - .env
volumes:
  postgres_data:
